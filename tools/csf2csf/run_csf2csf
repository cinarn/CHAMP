#! /bin/bash
# /bin/sh
# This script is run on the .out file from a GAMESS CI run.
# e.g. ~/champ/tools/csf2csf/run_csf2csf ci.out
# This script does the foll.:
# 1) it runs gamess2qmc on the GAMESS out file
# 2) it runs csf2csf on the .csf file created by gamess2qmc to create a .csfs file.
# 3) it edits the .inp file created by gamess2qmc using the .csf2 file to create a .inp2 file
# The instructions in line "Reduce nparm and nparm_csf by .." no longer need to be carried out by hand

# The .inp2 file should be ready to run in CHAMP if nctype=1, otherwise the lines with
# NDATA,NPARM,icusp,icusp2,NSIG,NCALLS,iopt,ipr
# and
# nparml,nparma,nparmb,nparmc,nparmf,nparmcsf,nparms,nparmg
# need editing.

# The number of CSFs is controlled by cutoff_g2q, which is read in as an argument to gamess2qmc.
# Within gamess2qmc, cutoff_d2c is set to 10*cutoff_g2q.
# eps is hardwired within cutoff_g2q and is the tolerance for which det. coefs are close enough to probably be in the same CSF.

for file in $*
do
  in=$file
  in_csf2csf=`echo $in | sed -e 's/out/csf/'`
  out_csf2csf=`echo $in | sed -e 's/out/csfs/'`
  vmc_input1=`echo $in | sed -e 's/.out/_vmc.inp/'`
  vmc_input2=`echo $in | sed -e 's/.out/_vmc.inp2/'`
  echo $in $in_csf2csf $out_csf2csf

# Omit the S if not using Slater basis
# If you want the 1st excited state of the same symmetry add "-w 2"
  $HOME/champ/tools/gamess2qmc/gamess2qmc -CJNFS -t initial -d 0.001 $in
  $HOME/champ/tools/gamess2qmc/gamess2qmc -CJNF -t initial -d 0.001 $in
# If using HF GAMESS output
# $HOME/champ/tools/gamess2qmc/gamess2qmc -CJ -t rhf $in
# and use vmc.inp rather than vmc.inp2

  $HOME/champ/tools/csf2csf/csf2csf < $in_csf2csf > $out_csf2csf

# nctype=`awk '/nctype,ncent/{print $1}' $vmc_input1` #determine number of center types
# string=`awk '/nctype,ncent/{print $3}' $vmc_input1`
# nparm=`awk '/DATA,NPARM,icusp,icusp2,NSIG,NCALLS,iopt,ipr/{print $2}' $vmc_input1` #determine number of parameters
# nparmcsf=`awk '/nparml,nparma,nparmb,nparmc,nparmf,nparmcsf,nparms,nparmg/{print $[3*$nctype+2]}' $vmc_input1` #determine number of CSF parameters

# echo $[nctype] $[nparm] $[nparmcsf] $[2*nparmcsf] $string
# awk '/DATA,NPARM,icusp,icusp2,NSIG,NCALLS,iopt,ipr/{print $1, $[nparm], $3, $4, $5, $6, $7, $8}' $vmc_input1


  ex $out_csf2csf <<_end
    1,/Inputs for new version of CHAMP with linear relations recognized/d
    1,1w! title
    2,2w! ndet
    3,3w! nparm
    4,4w! nparmcsf
    6,6w! iwcsf
    7,\$-1w! csfs
    \$w! nparmcsf_reduce
_end

  cp $vmc_input1 $vmc_input2

  ex $vmc_input2 <<_end
    1r title
    1,1d
    /ndet,nbasis,norb/d
    -1r ndet
    /NDATA,NPARM,icusp,icusp2,NSIG,NCALLS,iopt,ipr/d
    -1r nparm
    /nparml,nparma,nparmb,nparmc,nparmf,nparmcsf,nparms,nparmg/d
    -1r nparmcsf
#   /nparml,nparma,nparmb,nparmc,nparmf,nparmcsf,nparms,nparmg/
#   .r nparmcsf_reduce
    /(iwcsf(iparm),iparm=1,nparmcsf)/d
    -1r iwcsf
    /zex/+1,/Jastrow/-2d
    -1r csfs
    wq
_end

echo 'If nctype>1, you will have to edit 2 lines of the .inp2 file to change nparm, nparma and nparmc'

done

rm csfs iwcsf ndet nparm nparmcsf nparmcsf_reduce title
